full_address <- items %>% html_nodes(".text-align--right__373c0__3fmmn.border-color--default__373c0__2oFDT") %>% html_text()
delete_phone <- full_address %>% str_extract_all("(?<=\\(\\d{3}\\)\\s\\d{3}\\-\\d{4})(\\d+\\s\\w+\\s\\w{2})(.*)")
# return a data frame
tibble(
name = names,
url = urls,
# <---- Insert here more variables ------>
telephone_number = telephone_numbers,
address = delete_phone,
average_rating = average_ratings,
page_url = full_url,
number_of_reviews = review_count
)
}
# example output
get_yelp_sr_one_page("burgers") %>%
head(5) %>%
select(name, address) %>%
knitr::kable()
```
source('~/.active-rstudio-document')
getwd()
getwd()
directory <- getwd()
directory
directory <- getwd()
setwd(directory)
getwd()
all_education <- read.csv("/Users/catu/Desktop/DS4100/HW4/FipsEducation.csv", header = T, sep = ",")
all_unemployment <- read.csv("/Users/catu/Desktop/DS4100/HW4/FipsUnemployment.csv", header = T, sep = ",")
getwd()
setwd("/Users/catu/Desktop/DS4100/HW4/")
library(tidyverse)
all_education <- read.csv("/Users/catu/Desktop/DS4100/HW4/FipsEducation.csv", header = T, sep = ",")
all_unemployment <- read.csv("/Users/catu/Desktop/DS4100/HW4/FipsUnemployment.csv", header = T, sep = ",")
getwd()
setwd("/Users/catu/Desktop/DS4100/HW4/")
library(tidyverse)
# ----------------------------------- 1 --------------------------------------------
all_education <- read.csv("/Users/catu/Desktop/DS4100/HW4/FipsEducation.csv", header = T, sep = ",")
all_unemployment <- read.csv("/Users/catu/Desktop/DS4100/HW4/FipsUnemployment.csv", header = T, sep = ",")
all_education
getwd()
setwd("/Users/catu/Desktop/DS4100/HW4/")
library(tidyverse)
all_education <- read.csv("/Users/catu/Desktop/DS4100/HW4/FipsEducation.csv", header = T, sep = ",")
getwd()
setwd("/Users/catu/Desktop/DS4100/HW4/")
library(tidyverse)
getwd()
setwd("/Users/catu/Desktop/DS4100/HW4/")
setwd("/Users/catu/Desktop/DS4100/HW4/")
getwd()
setwd("/Users/catu/Desktop/DS4100/HW4/")
library(tidyverse)
# -----------------
getwd()
setwd("/Users/catu/Desktop/DS4100/HW4/")
all_education <- read.csv("/Users/catu/Desktop/DS4100/HW4/FipsEducation.csv", header = T, sep = ",")
all_education <- read.csv("/Users/catu/Desktop/DS4100/HW4/FipsEducation.csv", header = T, sep = ",")
all_unemployment <- read.csv("/Users/catu/Desktop/DS4100/HW4/FipsUnemployment.csv", header = T, sep = ",")
getwd()
setwd("/Users/catu/Desktop/DS4100/HW4/")
all_education <- read.csv("/Users/catu/Desktop/DS4100/HW4/FipsEducation.csv", header = T, sep = ",")
setwd("/Users/catu/Desktop/DS4100/HW4")
setwd("/Users/catu/Desktop/DS4100/HW4/")
install.packages('tinytex')
tinytex::install_tinytex()
install.packages("tinytex")
library("RSQLite")
directory <- getwd()
setwd(directory)
library(tidyverse)
library(dplyr)
library(plyr)
library(ggplot2)
library("RSQLite")
library('tinytex')
dbDisconnect(db)
all_education <- read.csv("FipsEducation.csv", header = T, sep = ",")
library(rtweet)
library(httr)
library(tidyverse)
# Twitter configuration
# Set all the Configuration details to authorize your application to access Twitter data.
access_token_secret <- "uTBqRxTxq5X1ir08qfxmOPBnkzMcSaLoHwEMMsEX7UO7N" #replace with your access token secret
consumer_key       <- "9gA8Qke0e1LMXsKMXNo1Ws5jN" #replace with your key
consumer_secret    <- "w1V5GWji8roYcnTrfpBFhEFqmjuaU56i6xDINFUisU0t3ftBje" #replace with your secret
access_token       <- "342952076-IAH8xQctBhdm0E4duIjdTGO04ooVQzv8W4FAsr0S" #replace with your access token
appname <- "DS4100_KD"
## access token method: create token and save it as an environment variable
# create token named "twitter_token"
twitter_token <- rtweet::create_token(app = appname,
consumer_key = consumer_key,
consumer_secret = consumer_secret,
access_token = access_token,
access_secret = access_token_secret)
install.packages("rtweet")
library(rtweet)
library(httr)
library(tidyverse)
access_token_secret <- "uTBqRxTxq5X1ir08qfxmOPBnkzMcSaLoHwEMMsEX7UO7N" #replace with your access token secret
consumer_key       <- "9gA8Qke0e1LMXsKMXNo1Ws5jN" #replace with your key
consumer_secret    <- "w1V5GWji8roYcnTrfpBFhEFqmjuaU56i6xDINFUisU0t3ftBje" #replace with your secret
access_token       <- "342952076-IAH8xQctBhdm0E4duIjdTGO04ooVQzv8W4FAsr0S" #replace with your access token
appname <- "DS4100_KD"
twitter_token <- rtweet::create_token(app = appname,
consumer_key = consumer_key,
consumer_secret = consumer_secret,
access_token = access_token,
access_secret = access_token_secret)
get_timeline("@Pontifex", n = 100, max_id = NULL, home = FALSE,
parse = TRUE, check = TRUE, token = NULL)
timeline <- get_timeline("@Pontifex", n = 100, max_id = NULL, home = FALSE,
parse = TRUE, check = TRUE, token = NULL)
timeline %>% select(text)
get_timeline(c("@Pontifex, @realDonaldTrump"), n = 100, max_id = NULL, home = FALSE,
parse = TRUE, check = TRUE, token = NULL)
get_timeline(c("@Pontifex, @realDonaldTrump"), n = 2, max_id = NULL, home = FALSE,
parse = TRUE, check = TRUE, token = NULL)
get_timeline("@Pontifex", n = 100, max_id = NULL, home = FALSE,
parse = TRUE, check = TRUE, token = NULL)
timeline %>% select(text)
tweets <- get_timeline(c("Pontifex, realDonaldTrump"), n = 2, max_id = NULL, home = FALSE,
parse = TRUE, check = TRUE, token = NULL)
tweets %>% select(text)
tweets <- get_timeline("@realDonaldTrump", n = 2, max_id = NULL, home = FALSE,
parse = TRUE, check = TRUE, token = NULL)
tweets %>% select(text)
tweets <- get_timeline(c("@Pontifex", "@realDonaldTrump"), n = 2, max_id = NULL, home = FALSE,
parse = TRUE, check = TRUE, token = NULL)
tweets %>% select(text)
get_timeline("@Pontifex", n = 100, max_id = NULL, home = FALSE,
parse = TRUE, check = TRUE, token = NULL)
rt <- search_tweets(
"#rstats", n = 18000, include_rts = FALSE
)
rt <- search_tweets(
"#rstats", n = 18000, include_rts = FALSE
)
ts_plot(rt, "3 hours") +
ggplot2::theme_minimal() +
ggplot2::theme(plot.title = ggplot2::element_text(face = "bold")) +
ggplot2::labs(
x = NULL, y = NULL,
title = "Frequency of #rstats Twitter statuses from past 9 days",
subtitle = "Twitter status (tweet) counts aggregated using three-hour intervals",
caption = "\nSource: Data collected from Twitter's REST API via rtweet"
)
directory <- getwd()
setwd(directory)
all_education <- read.csv("titanic_data.csv", header = T, sep = ",")
library(tidyverse)
library(dplyr)
library(plyr)
library(ggplot2)
all_education <- read.csv("titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("\titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("HW9/titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("Users⁩/catu⁩/Desktop/SCHOOL/DS4100⁩/⁨HW9⁩/titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("⁩/Desktop/SCHOOL/DS4100⁩/⁨HW9⁩/titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("/Desktop/SCHOOL/DS4100⁩/⁨HW9⁩/titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("titanic_data.csv", header = T, sep = ",")
getwd()
setwd(directory)
directory
getwd()
titanic_data <- read.csv("titanic_data.csv", header = T, sep = ",")
directory
titanic_data <- read.csv("/Desktop/SCHOOL/DS4100/HW9/titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("Desktop/SCHOOL/DS4100⁩/⁨HW9⁩/titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("/Desktop/SCHOOL/DS4100⁩/⁨HW9⁩/titanic_data.csv", header = T, sep = ",")
directory
titanic_data <- read.csv("/Users/catu/Desktop/SCHOOL/DS4100⁩/⁨HW9⁩/titanic_data.csv", header = T, sep = ",")
read.csv("/Users/catu/Desktop/SCHOOL/DS4100⁩/⁨HW9⁩/titanic_data.csv", header = T, sep = ","
titanic_data <- read.csv("/Users/catu/Desktop/SCHOOL/DS4100⁩/⁨HW9⁩/titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("titanic_data.csv", header = T, sep = ",")
getwd()
titanic_data <- read.csv("Desktop/SCHOOL/DS4100/HW9/titanic_data.csv", header = T, sep = ",")
titanic_data
training_data <- sample_frac(titanic_data, 0.7)
test_data <- sample_frac(titanic_data, 0.3)
library(tidyverse)
library(dplyr)
library(plyr)
library(ggplot2)
training_data <- sample_frac(titanic_data, 0.7)
test_data <- sample_frac(titanic_data, 0.3)
training_data
test_data
training_data <- sample_frac(titanic_data, 0.7)
test_data <- sample_frac(titanic_data, 0.3)
test_data
test_data <- sample_frac(titanic_data, 0.3)
View(training_data)
View(test_data)
knitr::opts_chunk$set(echo = TRUE)
titanic_data <- read.csv("Desktop/SCHOOL/DS4100/HW9/titanic_data.csv", header = T, sep = ",")
training_data <- sample_frac(titanic_data, 0.7)
```{r}
titanic_data <- read.csv("Desktop/SCHOOL/DS4100/HW9/titanic_data.csv", header = T, sep = ",")
training <- sample_frac(titanic_data, 0.7)
pid <- as.numeric(ronames(training))
titanic_data <- read.csv("Desktop/SCHOOL/DS4100/HW9/titanic_data.csv", header = T, sep = ",")
training <- sample_frac(titanic_data, 0.7)
pid <- as.numeric(rownames(training))
test <- dataset[-pid, ]
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(plyr)
library(stats)
titanic_data <- read.csv("Desktop/SCHOOL/DS4100/HW9/titanic_data.csv", header = T, sep = ",")
training <- sample_frac(titanic_data, 0.7)
pid <- as.numeric(rownames(training))
test <- dataset[-pid, ]
titanic_data <- read.csv("Desktop/SCHOOL/DS4100/HW9/titanic_data.csv", header = T, sep = ",")
training <- sample_frac(titanic_data, 0.7)
pid <- as.numeric(rownames(training))
test <- titanic_data[-pid, ]
training.glm <- glm(formula=survived ~ Sex + Age + Pclass + SibSp + Parch, data=training, family=binomial)
training.glm <- glm(formula=Survived ~ Sex + Age + Pclass + SibSp + Parch, data=training, family=binomial)
training.glm
Sumamry(training.glm)
Summary(training.glm)
trainingglm <- glm(formula=Survived ~ Sex + Age + Pclass + SibSp + Parch, data=training, family=binomial)
Summary(trainingglm)
library(dplyr)
library(plyr)
library(stats)
trainingglm <- glm(formula=Survived ~ Sex + Age + Pclass + SibSp + Parch, data=training, family=binomial)
summary(trainingglm)
predict(model2, test, type="response")
model2 <- glm(formula=Survived ~ Sex + Age + Pclass + SibSp, data=training, family=binomial)
summary(model2)
predict(model2, test, type="response")
predict(model2, test, type="response")1
(model2, test, type="response")
predict(model2, test, type="response")
predict(model2, d[test,], type="response")
predict(model2, test, type="response")
predict(model2, test)
predict(model2, test, type="response")
lol <- test %>% select(Survived, Sex,Age, Pclass, SibSp,)
predict(model2, lol, type="response")
predict(model2, test, type="response")
test$survivalPrediction <- predict(model2, test, type="response")
View(test)
test$survivalPrediction <- [test$survivalPrediction>0.5 = 1]
test$survivalPrediction <- if(test$survivalPrediction>0.5, test$survivalPrediction = 1)
test$survivalPrediction <- ifelse(test$survivalPrediction>0.5, 1, 0)
View(test)
mean(test$survivalPrediction == test$Survived)
mean(test$survivalPrediction == test$Survived)
mean(test$survivalPrediction == test$Survived, na.rm = T)
accuracy
accuracy <- mean(test$survivalPrediction == test$Survived, na.rm = T)
accuracy
predict(model2, test, type="response")
test$survivalPrediction <- predict(model2, test, type="response")
test$survivalPrediction <- predict(model2, test, type="response")
test$survivalPrediction <- ifelse(test$survivalPrediction>0.5, 1, 0)
accuracy <- mean(test$survivalPrediction == test$Survived, na.rm = T)
accuracy
accuracy * 100
accuracy <- mean(test$survivalPrediction == test$Survived, na.rm = T)
accuracy_percent <- accuracy * 100
accuracy_percent
bias(model, test)
confusionMatrix(test$survivalPrediction, test$Survived, threshold = optCutOff)
confusionMatrix(model, test)
confusionMatrix(test$survivalPrediction, test)
confusionMatrix(test$survivalPrediction, test$Survived)
library(caret)
install.packages("caret")
confusionMatrix(test$survivalPrediction, test$Survived)
library(caret)
confusionMatrix(test$survivalPrediction, test$Survived)
confusionMatrix(model, test)
confusionMatrix(test, test)
confusionMatrix(test$survived, test$survivalPrediction)
confusionMatrix(factor(test$survived), factor(test$survivalPrediction))
confusionMatrix(factor(test$survivalPrediction), factor(test$Survived))
library(caret)
confusionMatrix(factor(test$survivalPrediction), factor(test$Survived))
install.packages('e1071', dependencies=TRUE)
confusionMatrix(factor(test$survivalPrediction), factor(test$Survived))
titanic_data <- read.csv("Desktop/SCHOOL/DS4100/HW9/titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("Desktop/SCHOOL/DS4100/HW9/titanic_data.csv", header = T, sep = ",")
titanic_data <- read.csv("titanic_data.csv", header = T, sep = ",")
set.seed(123)
training <- sample_frac(titanic_data, 0.7)
pid <- as.numeric(rownames(training))
test <- titanic_data[-pid, ]
model1 <- glm(formula=Survived ~ Sex + Age + Pclass + SibSp + Parch, data=training, family=binomial)
summary(model1)
model2 <- glm(formula=Survived ~ Sex + Age + Pclass, data=training, family=binomial)
summary(model2)
test$survivalPrediction <- predict(model2, test, type="response")
test$survivalPrediction <- ifelse(test$survivalPrediction>0.5, 1, 0)
accuracy <- mean(test$survivalPrediction == test$Survived, na.rm = T)
accuracy_percent <- accuracy * 100
accuracy_percent
confusionMatrix(factor(test$survivalPrediction), factor(test$Survived))
source('~/.active-rstudio-document')
senators_list <- read.csv("SenatorList.xlsx", header = T, sep = ",")
getwd()
senators_list <- read.csv("/Desktop/SCHOOL/DS4100/SenatorList.xlsx", header = T, sep = ",")
senators_list <- read.csv("SenatorList.xlsx", header = T, sep = ",")
senators_list <- read.csv("SenatorList.xlsx", header = T, sep = ",")
senators_list <- read.csv("/Desktop/SCHOOL/DS4100/SenatorList.xlsx", header = T, sep = ",")
getwd()
senators_list <- read.csv("/Desktop/SCHOOL/DS4100/SenatorList.xlsx", header = T, sep = ",")
senators_list <- read.csv("Desktop/SCHOOL/DS4100/SenatorList.xlsx", header = T, sep = ",")
senators_list
senators_list <- read.table("Desktop/SCHOOL/DS4100/SenatorList.xlsx",file = "clipboard",
sep = "\t", header=TRUE)
senators_list
install.packages("readxl")
library("readxl")
senators_list <- read_excel("Desktop/SCHOOL/DS4100/SenatorList.xlsx")
senators_list <- read.table("Desktop/SCHOOL/DS4100/SenatorList.xlsx",file = "clipboard",
sep = "\t", header=TRUE)
senators_list
View(senators_list)
colnames(senators_list)
View(senators_list)
View(senators_list)
senators_list <- read.csv("Desktop/SCHOOL/DS4100/SenatorList.xlsx", header = T, sep = ",")
View(senators_list)
senators_list <- read.csv("Desktop/SCHOOL/DS4100/SenatorList", header = T, sep = ",")
senators_list <- read.csv("Desktop/SCHOOL/DS4100/SenatorList.csv", header = T, sep = ",")
View(senators_list)
senators_list <- read_excel("Desktop/SCHOOL/DS4100/SenatorList.xlsx")
senators_list <- read_excel("Desktop/SCHOOL/DS4100/SenatorList.xlsx")
View(senators_list)
senators <- senators_list %>%
separate(Senators, into = c("state", "name", "twitter"), sep = "([A-Z]{2})\s(.*)@(.*)")
senators <- senators_list %>%
separate(Senators, into = c("state", "name", "twitter"), sep = "([A-Z]{2})\\s(.*)@(.*)")
senators <- senators_list %>%
separate(Senators, into = c("state", "name", "twitter"), sep = "([A-Z]{2})\\s(.*)@(.*)")
senators <- senators_list %>%
separate(Senators, into = c("state", "name", "twitter"))
library(dplyr)
library(dplyr)
library(tidyr)
senators <- senators_list %>%
separate(Senators, into = c("state", "name", "twitter"), sep = "([A-Z]{2})\\s(.*)@(.*)")
senators
senators <- senators_list %>%
separate(Senators, into = c("state", "name", "twitter"), sep = "([A-Z]{2})")
senators
senators <- senators_list %>%
separate(Senators, into = c("state", "name", "twitter"), sep = " ")
senators
senators <- senators_list %>%
separate(Senators, into = c("state", "name", "twitter"), sep = " @")
senators
senators <- senators_list %>%
separate(Senators, into = c("both", "twitter"), sep = " @")
senators
senators_final %>%
separate(both, into = c("state", "name"), sep = " ")
senators %>%
separate(both, into = c("state", "name"), sep = " ")
senators_final
senators %>%
separate(both, into = c("state", "name"), sep = " ")
senators %>%
separate(both, into = c("state", "name"), sep = "[A-Z]")
senators_final <- senators %>%
separate(both, into = c("state", "name"), sep = "")
senators_final
senators_final <- senators %>%
separate(both, into = c("state", "name"), sep = " ")
senators_final
senators %>%
separate(both, into = c("state", "name", "lol"), sep = " ")
senators %>%
separate(both, into = c("state", "name"), sep = "2")
senators %>%
separate(both, into = c("state", "name"), sep = 3)
senators %>%
separate(both, into = c("state", "name"), sep = 2)
senators_final <- senators %>%
separate(both, into = c("state", "name"), sep = 3)
senators_final
View(senators_list)
senators_final
load("dummy.rda")
senators_list <- read_excel("SenatorList.xlsx")
getwd(0)
getwd()
setwd("/Users/catu/Desktop/SCHOOL/DS4100/FinalProject/")
getwd()
senators_list <- read_excel("SenatorList.xlsx")
load("dummy.rda")
View(dummy)
gsub( " ", "", senators_final$state)
View(senators_final)
save(senators_final, file="senatorDataList.Rda")
knitr::opts_chunk$set(echo = TRUE)
access_token_secret <- "uTBqRxTxq5X1ir08qfxmOPBnkzMcSaLoHwEMMsEX7UO7N" #replace with your access token secret
consumer_key       <- "9gA8Qke0e1LMXsKMXNo1Ws5jN" #replace with your key
consumer_secret    <- "w1V5GWji8roYcnTrfpBFhEFqmjuaU56i6xDINFUisU0t3ftBje" #replace with your secret
access_token       <- "342952076-IAH8xQctBhdm0E4duIjdTGO04ooVQzv8W4FAsr0S" #replace with your access token
appname <- "DS4100_App"
# create token named "twitter_token"
twitter_token <- rtweet::create_token(app = appname,
consumer_key = consumer_key,
consumer_secret = consumer_secret,
access_token = access_token,
access_secret = access_token_secret)
load("senatorDataList.Rda")
senatorData <- load("senatorDataList.Rda")
senatorData
senators_final
senators_final$state <- gsub( " ", "", senators_final$state)
senators_final
View(senators_final)
senators_final
save(senators_final, file="senatorData.Rda")
senatorData <- load("senatorData.Rda")
senatorData
View(senatorData)
senators_final
senatorsdf <- data.frame(senators_final)
senatorsdf
save(senatorsdf, file="senatorData.Rda")
senatorData <- load("senatorData.Rda")
View(senatorData)
senatorData <- load("senatorData.Rda")
save(senatorsdf, file="senatorDataDF.Rda")
senatorData <- load("senatorDataDF.Rda")
senatorData
senatorsdf
load("senatorDataDF.Rda")
#View(senatorData)
load("senatorDataDF.Rda")
#View(senatorData)
lol <- load("senatorDataDF.Rda")
load("senatorDataDF.Rda")
View(senatorsdf)
knitr::opts_chunk$set(echo = TRUE)
access_token_secret <- "tGRqQT1Owz7DCVLZtEl2bSoR0gId4ptP5px7tjE5Otu0w" #replace with your access token secret
consumer_key       <- "GnrmA9Nba0B7xC7GarjW0hO9I" #replace with your key
consumer_secret    <- "A9MTNshOxb8K2ftaxEyt8GiknPGynFwoiG8AHCw2OxiUtXD4UD" #replace with your secret
access_token       <- "1040648642-wL4eOa9zEP5VpYvKrZMSMOERqdhGQu9XCYIA4Ym" #replace with your access token
appname <- "DS4100 Catu App"
# create token named "twitter_token"
twitter_token <- rtweet::create_token(app = appname,
consumer_key = consumer_key,
consumer_secret = consumer_secret,
access_token = access_token,
access_secret = access_token_secret)
tweets <- get_timeline("JohnBoozman", n = 1, max_id = NULL, home = FALSE, parse = TRUE, check = TRUE, token = NULL)
library(rtweet)
library(httr)
library(tidyverse)
library(rvest)
library(xml2)
tweets <- get_timeline("JohnBoozman", n = 1, max_id = NULL, home = FALSE, parse = TRUE, check = TRUE, token = NULL)
tweets
tweets <- get_timeline(senatorsdf$twitter, n = 1, max_id = NULL, home = FALSE, parse = TRUE, check = TRUE, token = NULL)
tweets <- get_timeline(senatorsdf$twitter, n = 1, max_id = NULL, home = FALSE, parse = TRUE, check = TRUE, token = NULL)
(senatorsdf$twitter
senatorsdf$twitter
senatorsdf$twitter
end_senators <- senatorsdf[c(67:99),]
end_senators
tweets <- get_timeline(end_senators$twitter, n = 1, max_id = NULL, home = FALSE, parse = TRUE, check = TRUE, token = NULL)
tweets
end_senators <- senatorsdf[c(67:100),]
end_senators
end_senators_1 <- senatorsdf[c(67:75),]
end_senators_2 <- senatorsdf[c(76:83),]
end_senators_3 <- senatorsdf[c(84:91),]
end_senators_4 <- senatorsdf[c(92:100),]
View(end_senators)
tweets_end_1 <- get_timeline(end_senators_1$twitter, n = 80, max_id = NULL, home = FALSE, parse = TRUE, check = TRUE, token = NULL)
tweets_end_1
rate_limit()
tweets_end_2 <- get_timeline(end_senators_2$twitter, n = 80, max_id = NULL, home = FALSE, parse = TRUE, check = TRUE, token = NULL)
tweets_end_2
tweets_end_1
tweets_end_2
tweets_end_3 <- get_timeline(end_senators_3$twitter, n = 80, max_id = NULL, home = FALSE, parse = TRUE, check = TRUE, token = NULL)
tweets_end_3
tweets_end_14<- get_timeline(end_senators_4$twitter, n = 80, max_id = NULL, home = FALSE, parse = TRUE, check = TRUE, token = NULL)
tweets_end_14
tweets_end_4 <- get_timeline(end_senators_4$twitter, n = 80, max_id = NULL, home = FALSE, parse = TRUE, check = TRUE, token = NULL)
tweets_end_4
tweets_end_all <- df()
tweets_end_all <- data.frame()
rbind(tweets_end_all, tweets_end_1)
rbind(tweets_end_all, tweets_end_1)
rbind(tweets_end_all, tweets_end_2)
rbind(tweets_end_all, tweets_end_2)
rbind(tweets_end_all, tweets_end_3)
rbind(tweets_end_all, tweets_end_2)
rbind(tweets_end_all, tweets_end_3)
rbind(tweets_end_all, tweets_end_4)
tweets_end_all
tweets_end_all <- rbind(tweets_end_1, tweets_end_2)
tweets_end_all
tweets_end_all <- rbind(tweets_end_1, tweets_end_2)
tweets_end_all <- rbind(tweets_end_all, tweets_end_3)
tweets_end_all <- rbind(tweets_end_all, tweets_end_4)
tweets_end_all
save(tweets_end_all, file="tweetsEndAll.Rda")
